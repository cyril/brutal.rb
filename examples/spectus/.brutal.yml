---
header: |
  # frozen_string_literal: false

  require 'spectus'
  include Spectus

subject: |
    begin
      it { %{lambda} }.%{level} %{matcher}
    rescue ::Spectus::Result::Fail => e
      e
    end

variables:
  :lambda:
    - 42
    - "'foo'.upcase"
    - "'foo'.gsub!('f', 'b')"
    - "'foo'.boom"
    - "'foo'.empty?(4)"
    - ArgumentError.new
    - Exception
  :level:
    - MUST
    - SHOULD
    - MAY
    - MUST_NOT
    - SHOULD_NOT
    - MUST!
    - SHOULD!
    - MAY!
    - MUST_NOT!
    - SHOULD_NOT!
  :matcher:
    - raise_exception(NoMethodError)
    - raise_exception(ArgumentError)
    - equal(42)

challenges:
  - "%{actual}.level"
  - "%{actual}.to_s"
  - "%{actual}.to_sym"
  - "%{actual}.error?"
  - "%{actual}.failure?"
  - "%{actual}.info?"
  - "%{actual}.negate?"
  - "%{actual}.failed?"
  - "%{actual}.passed?"
  - "%{actual}.success?"
  - "%{actual}.valid?"
  - "%{actual}.warning?"
  - "%{actual}.char"
  - "%{actual}.message"
  - "%{actual}.to_s"
  - "%{actual}.inspect"
  - "%{actual}.color('foo')"
  - "%{actual}.actual.class"
  - "%{actual}.error.class"
  - "%{actual}.got.class"
